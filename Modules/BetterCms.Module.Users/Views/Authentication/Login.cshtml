@* --------------------------------------------------------------------------------------------------------------------
    // <copyright file="Login.cshtml" company="Devbridge Group LLC">
    //
    // Copyright (C) 2015,2016 Devbridge Group LLC
    //
    // This program is free software: you can redistribute it and/or modify
    // it under the terms of the GNU Lesser General Public License as published by
    // the Free Software Foundation, either version 3 of the License, or
    // (at your option) any later version.
    //
    // This program is distributed in the hope that it will be useful,
    // but WITHOUT ANY WARRANTY; without even the implied warranty of
    // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    // GNU General Public License for more details.
    //
    // You should have received a copy of the GNU Lesser General Public License
    // along with this program.  If not, see http://www.gnu.org/licenses/.
    // </copyright>
    //
    // <summary>
    // Better CMS is a publishing focused and developer friendly .NET open source CMS.
    //
    // Website: https://www.bettercms.com
    // GitHub: https://github.com/devbridge/bettercms
    // Email: info@bettercms.com
    // </summary>
    // -------------------------------------------------------------------------------------------------------------------- *@
@using BetterCms.Module.Root.Mvc.Helpers
@using BetterCms.Module.Users.Content.Resources
@using Microsoft.Web.Mvc
@using BetterCms.Module.Users.Controllers;
@using BetterCms.Module.Users.Services;
@using BetterCms.Module.Users.ViewModels;

@model BetterCms.Module.Users.ViewModels.Authentication.LoginViewModel

@{

    Layout = "~/Areas/bcms-users/Views/Shared/PublicActionLayout.cshtml";
    ViewBag.Title = "Login";

    ViewBag.googleApikey = System.Configuration.ConfigurationManager.AppSettings["googleApikey"];

    ViewBag.googleAppid = System.Configuration.ConfigurationManager.AppSettings["googleAppId"];

    ViewBag.facebookid = System.Configuration.ConfigurationManager.AppSettings["facebookAppId"];

}

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="/file/bcms-users/scripts/google.js"></script>
<script src="https://apis.google.com/js/platform.js" async defer></script>
<script type="text/javascript" src="//connect.facebook.net/en_US/all.js"></script>
<meta name="google-signin-client_id" content='@(ViewBag.googleAppid)'>

<script type="text/javascript">
    var googleApiKey = '@ViewBag.googleApikey';
    var facebookId = '@ViewBag.facebookid';
    var googleAppId = '@ViewBag.googleAppid';
</script>

<script async defer src="https://apis.google.com/js/api.js"
        onload="this.onload=function(){};handleClientLoad()"
        onreadystatechange="if (this.readyState === 'complete') this.onload()">
</script>

<script src="/file/bcms-users/scripts/facebook.js"></script>

<div id="fb-root"></div>

<div class="bcms-login-box">
    <h1>TITLE OF LOGIN</h1>
    <h5 id="invalidusermessage" style="display:none">This user is already registered.</h5>
    <div id="divBasicLogin">
        @{
            BetterCms.Module.Users.ViewModels.Authentication.LoginViewModel model = new BetterCms.Module.Users.ViewModels.Authentication.LoginViewModel();
        }
        @using (Html.BeginForm())
        {

            <div class="bcms-content-titles">@UsersGlobalization.Login_UserName</div>
            @Html.ValidationMessageFor(m => m.UserName)
            <div class="bcms-field-wrapper">
                @Html.TextBoxFor(m => m.UserName, new { id = "userName", @class = "bcms-field-text" })
            </div>

            <div class="bcms-content-titles">@UsersGlobalization.Login_Password</div>
            @Html.ValidationMessageFor(m => m.Password)
            <div class="bcms-field-wrapper">
                @Html.PasswordFor(m => m.Password, new { @class = "bcms-field-text" })
            </div>

            <div class="bcms-field-wrapper bcms-remember-box">
                @Html.CheckBoxFor(m => m.RememberMe)
                @Html.LabelFor(m => m.RememberMe)
            </div>

            Dictionary<string, object> submitProperties = new Dictionary<string, object>();
            submitProperties.Add("class", "bcms-btn-primary");
            if (!Model.IsFormsAuthenticationEnabled)
            {
                submitProperties.Add("disabled", "disabled");
            }

            @Html.SubmitButton("submit", "Login", submitProperties)

            @Html.HiddenFor(m => m.ReturnUrl)
        }

        @if (@ViewBag.googleAppid != "")
        {
            <div style="height:50px;width:100%;"></div>

            <div class="socialbutton" id="gsign_d">
                <div class="g-signin2"  data-onsuccess="onSignIn"></div>
            </div>
        }

        @if (@ViewBag.facebookid != "")
        {
            <div class="socialbutton" id="facebookIn_d">
                <button id="facebookIn" onclick="javascript:Login();">f <span>sign in</span></button>
            </div>
        }
        <div class="socialbutton">
            <button class="bcms-btn-primary" style="width:120px;margin-top:8px;" id="signup" onclick="javascript:window.location.href='@Url.RouteUrl("Signup")'">Signup</button>
        </div>
    </div>
    <div id="emailaddress" style="display: none;">
        <div class="bcms-content-titles">Email</div>
        <span class="field-validation-error" data-valmsg-for="Email" data-valmsg-replace="true" style="display:none">
            Email is required.
        </span>
        <div class="bcms-field-wrapper">
            <input class="input-validation-error bcms-field-text" data-val="true" data-val-required="Email is required." id="Email" name="Email" type="text" value="">
        </div>
        <button class="bcms-btn-primary" id="submitfacebookemail" onclick="javascript:FacebookLogin();">Submit</button>
    </div>
</div>
<a href="#" id="auth-logoutlink" style="display:none;">logout</a>
<script type="text/javascript">
    //$(document).ready(function () {
    //    localStorage.setItem('GuserLoggedIn', "No");
    //});

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    window.fbAsyncInit = function () {
        FB.init({
            appId: facebookId,//'337763920005658',
            xfbml: true,
            version: 'v2.10'
        });
       // FB.AppEvents.logPageView();

        // listen for and handle auth.statusChange events
        //FB.Event.subscribe('auth.statusChange', function (response) {
        //    //if (response.authResponse) {
        //    //    // user has auth'd your app and is logged into Facebook

        //    //    FB.api('/me', function (me) {
        //    //        if (me.name) {
        //    //            document.getElementById('auth-displayname').innerHTML = me.name;

        //    //        }
        //    //    })
        //    //    document.getElementById('auth-loggedout').style.display = 'none';
        //    //    document.getElementById('auth-loggedin').style.display = 'block';
        //    //} else {
        //    //    // user has not auth'd your app, or is not logged into Facebook
        //    //    document.getElementById('auth-loggedout').style.display = 'block';
        //    //    document.getElementById('auth-loggedin').style.display = 'none';
        //    //}
        //});
        if (localStorage.getItem('FBloggedIn') == 'yes') {
            setTimeout(function () { 
                $("#auth-logoutlink").click();
            }, 1000);
        }
        //$("#auth-loginlink").click(function () { FB.login(); });
        $("#auth-logoutlink").click(function () {
            localStorage.setItem('FBloggedIn', 'no');
            fbLogoutUser();
        });

       // FB.getLoginStatus(handleSessionResponse);
    }

    function fbLogoutUser() {
        FB.login(function (response1) {
            if (response1 && response1.status === 'connected') {
                FB.logout(function (response) {
                   // document.location.reload();
                });
            }
        });
    }

    function handleSessionResponse(response) {
        //if we dont have a session (which means the user has been logged out, redirect the user)
        if (!response.session) {
            window.location.href = window.location.href;// "/mysite/Login.aspx";
            return;
        }

        //if we do have a non-null response.session, call FB.logout(),
        //the JS method will log the user out of Facebook and remove any authorization cookies
        FB.logout(handleSessionResponse);
    }

    function onSignIn(googleUser) {
        var loginStatusGoogle = localStorage.getItem('GuserLoggedIn');
        if (loginStatusGoogle == 'yes') {
            localStorage.setItem('GuserLoggedIn', "No");
            document.location.href = "https://www.google.com/accounts/Logout?continue=https://appengine.google.com/_ah/logout?continue=http://bettercms.sandbox.mvc4.local.net/login";
        }
        else {
            var profile = googleUser.getBasicProfile();
            console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
            var str = profile.getId();
            var data = { 'SocialId': profile.getId(), 'FirstName': profile.getGivenName(), 'LastName': profile.getFamilyName(), 'Email': profile.getEmail(), 'Type': 'google' }
            console.log(data);

            $.ajax({
                url: "/bcms-users/Authentication/SocialLogin?Socialid=" + str,
                type: 'POST',
                async: false,
                dataType: 'json',
                data: data,
                success: function (response) {
                    localStorage.setItem('GuserLoggedIn', "yes");
                    if (response == 0) {
                        $('#invalidusermessage').html('This user is already registered.').show();
                    }
                    else {
                        window.location.href = window.location.href;// "http://bettercms.sandbox.mvc4.local.net/";
                    }
                },
                error: function (jqXHR, textStatus, err) {
                    //alert(textStatus);
                }
            });

        }
    }

    (function () {
        document.getElementById('userName').focus();
    })();

    function Login() {
        FB.login(function (response) {
            // handle the response
            if (response.status === 'unknown') {
                location.reload();
            }
            else {
                localStorage.setItem('FBloggedIn', 'yes');
                var loginStatusFB = localStorage.getItem('FBloggedIn');
                localStorage.setItem("response", response);
                if (loginStatusFB == 'yes') {

                    FB.api('/me', 'get', { fields: 'id,name,gender,email,first_name,last_name' }, function (response) {
                        var profile_id = response.id;
                        var email = response.email;
                        var data = { 'SocialId': response.id, 'FirstName': response.first_name, 'LastName': response.last_name, 'Email': '', 'Type': 'facebook' }
                        var IsRegistered = 0;
                        $.ajax({
                            url: "/bcms-users/Authentication/IsSocialIdExists?Socialid=" + data.SocialId,
                            type: 'GET',
                            async: false,
                            dataType: 'json',
                            success: function (response) {
                                IsRegistered = response;
                            },
                            error: function (jqXHR, textStatus, err) {
                                // alert(textStatus);
                            }
                        });

                        if (typeof response.email == 'undefined' && IsRegistered == 0) {
                            $('#emailaddress').show();
                            $('#divBasicLogin').hide();
                            postdata = data;
                        }
                        else {
                            RegisterFacebookUser(data, email)
                        }
                    });
                }
                // window.location = "http://bettercms.sandbox.mvc4.local.net/";
            }

        }, { scope: 'public_profile,email' });
    }

    // // // google user
    var auth21;

    function handleClientLoad() {
        // Loads the client library and the auth2 library together for efficiency.
        // Loading the auth2 library is optional here since `gapi.client.init` function will load
        // it if not already loaded. Loading it upfront can save one network request.
        gapi.load('client:auth2', initClient);
    }

    function initClient() {
        // Initialize the client with API key and People API, and initialize OAuth with an
        // OAuth 2.0 client ID and scopes (space delimited string) to request access.
        gapi.client.init({
            apiKey: googleApiKey,
            discoveryDocs: ["https://people.googleapis.com/$discovery/rest?version=v1"],
            clientId: googleAppId,
            scope: 'profile'
        }).then(function () {
            // Listen for sign-in state changes.
            gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

            // Handle the initial sign-in state.
            updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
        });
    }

    function updateSigninStatus(isSignedIn) {
        // When signin status changes, this function is called.
        // If the signin status is changed to signedIn, we make an API call.
        if (isSignedIn) {
            makeApiCall();
        }
    }

    function handleSignInClick(event) {
        // Ideally the button should only show up after gapi.client.init finishes, so that this
        // handler won't be called before OAuth is initialized.
        gapi.auth2.getAuthInstance().signIn();
    }


    function makeApiCall() {
        // Make an API call to the People API, and print the user's given name.

        gapi.client.people.people.get({
            resourceName: 'people/me',

        }).then(function (response) {
            var str = response.result.resourceName;
            var profileId = str.substring(7);
            alert("login.cshtml3");
            localStorage.setItem("response", response);
            alert(profileId);
            $.ajax({
                url: "/bcms-users/Authentication/SocialLogin?Socialid=" + profileId,
                type: 'POST',
                async: false,
                dataType: 'json',
                data: response,
                success: function (response) {
                    status = true;
                    //if (response === 1) status = true;
                },
                error: function (jqXHR, textStatus, err) {
                    //alert(textStatus);
                }
            });
            localStorage.setItem('GuserLoggedIn', "yes");
            window.location.href = window.location.href; //"http://bettercms.sandbox.mvc4.local.net/";
            //console.log('Hello, ' + response.result.names[0].givenName);
        }, function (reason) {
            console.log('Error: ' + reason.result.error.message);
        });
    }

    function RegisterFacebookUser(data, email) {
        data.Email = email;
        $.ajax({
            url: "/bcms-users/Authentication/SocialLogin?Socialid=" + data.SocialId,
            type: 'POST',
            async: false,
            dataType: 'json',
            data: data,
            success: function (response) {
                if (response == 0) {
                    // alert('This user is already registered');
                    $('#invalidusermessage').html('This user is already registered.').show();
                }
                else {
                    window.location.href = window.location.href;
                }
                //status = true;
                //if (response === 1) status = true;
            },
            error: function (jqXHR, textStatus, err) {
                // alert(textStatus);
            }
        });
        // window.location = window.location;// "http://bettercms.sandbox.mvc4.local.net/";
    }

    function FacebookLogin() {
        var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if ($.trim($('#Email').val()) == '' || !filter.test($.trim($('#Email').val()))) {
            $('span[data-valmsg-for=Email]').show();
            return false;
        }
        else {
            $('span[data-valmsg-for=Email]').hide();
            RegisterFacebookUser(postdata, $.trim($('#Email').val()));
        }
    }
    var postdata = [];
</script>

<style>
    #facebookIn {
        background: #3b5998;
        background: -webkit-linear-gradient(#3b5998, #3b5998);
        background: linear-gradient(#3b5998, #3b5998);
        color: #fff;
        display: inline-block;
        font: normal 700 24px/1 "Calibri", sans-serif;
        text-align: center;
        text-shadow: 1px 1px 0 #000;
        margin-top: 8px;
        height: 36px;
        width: 120px;
        border: 0;
    }

    .socialbutton {
        /*width: 100%;
        text-align: center;*/
        width: 125px;
        margin: 0 auto;
    }

    .googleIn {
        background: #fff;
        background: -webkit-linear-gradient(#fff, #fff);
        background: linear-gradient(#fff, #fff);
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 1px 0 0 #444;
        color: #f00;
        display: inline-block;
        padding: 8px 20px;
        font: normal 700 24px/1 "Calibri", sans-serif;
        text-align: center;
        text-shadow: none;
    }

    button {
        padding: 0px;
    }
    
</style>